version: "3.9"

# Four Services: 1) App 2) Worker 3) DB 4) Redis

services:
  app:
    build:

      # Build the image using the Dockerfile
      context: ./main

      # Send argumnets of development env = TRUE
      args:
        - DEV=true

    container_name: atlan-main

    # Run on PORT=5000
    ports:
      - "5000:5000"

    # Pass the .env file from this path
    env_file:
      - ./main/.env

    # Set the volume to this path (Any changes in container will make change in the outside files and vice versa)
    volumes:
      - ./main:/app

    # Depends on both mongo and redis
    depends_on:
      - mongo
      - redis

    links:
      - mongo
      - redis:redis

    networks:
      - network

  worker:
    build:

      # Build the image using the Dockerfile
      context: ./worker

      # Send argumnets of development env = TRUE
      args:
        - DEV=true

    container_name: atlan-worker

    # Run on PORT=8000
    ports:
      - "8000:8000"

    # Pass the .env file from this path
    env_file:
      - ./worker/.env

    # Set the volume to this path (Any changes in container will make change in the outside files and vice versa)
    volumes:
      - ./worker:/worker

    # Depends on both mongo and redis
    depends_on:
      - mongo
      - redis

    links:
      - mongo
      - redis:redis

    networks:
      - network

  mongo:
    image: mongo:latest

    container_name: mongo

    # Set the volumes into the data/db folder
    volumes:
      - ./data/db:/data/db

    ports:
      - 27017:27017

    restart: unless-stopped

    networks:
      - network

  redis:
    image: "redis:alpine"

    container_name: redis

    ports:
      - "6379:6379"

    expose:
      - 6379

    restart: unless-stopped

    networks:
      - network

  health:
    build:

      # Build the image using the Dockerfile
      context: ./health

      # Send argumnets of development env = TRUE
      args:
        - DEV=true

    container_name: health

    # Run on PORT=9000
    ports:
      - "9000:9000"

    # Pass the .env file from this path
    env_file:
      - ./health/.env

    # Set the volume to this path (Any changes in container will make change in the outside files and vice versa)
    volumes:
      - ./health:/health

    networks:
      - network

networks:
  network:
    driver: bridge